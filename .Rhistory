datos <- read.csv("Nicho/Datos/HeV-survival.csv")
library(ggplot2)
datos
1*7*24*60
datos <- read.csv("Nicho/Datos/HeV-survival.csv")
datos
d.4 <- subset(datos, Temp == 4)
d.22 <- subset(datos, Temp == 4)
d.56 <- subset(datos, Temp == 4)
d.4
d.22
d.56
d.4 <- subset(datos, Temp == 4)
d.22 <- subset(datos, Temp == 22)
d.56 <- subset(datos, Temp == 56)
d.56
ggplot(d.4) + geom_point(aes(x = Time, y = ln.S))
ggplot(d.4) + geom_point(aes(x = Time, y = ln.S)) +
geom_smooth(aes(x = Time, y = ln.S), method = "lm")
ggplot(d.22) + geom_point(aes(x = Time, y = ln.S)) +
geom_smooth(aes(x = Time, y = ln.S), method = "lm")
ggplot(d.56) + geom_point(aes(x = Time, y = ln.S)) +
geom_smooth(aes(x = Time, y = ln.S), method = "lm")
m4 <- nls(ln.S ~ - rho * Time ^ (kappa), data = d.4,
start = list(rho = 1, kappa = 1),
algorithm =  "plinear")
m4 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.4,
start = list(rho = 1, kappa = 0.9),
algorithm =  "plinear")
root.56 <- sapply(seq(0.1, 1.5, len = 10), function(x){d.56$ln.S^x})
matplot(root.56)
root.56
root.56 <- sapply(seq(0.1, 1.5, len = 10), function(x){(-d.56$ln.S)^x})
root.56
matplot(root.56)
matplot(t(root.56))
matplot(t(-root.56))
root.56 <- sapply(seq(0.01, 1.5, len = 10), function(x){(-d.56$ln.S)^x})
matplot(t(-root.56))
seq(0.01, 1.5, len = 10)
root.56 <- sapply(seq(0.01, 0.15, len = 10), function(x){(-d.56$ln.S)^x})
matplot(t(-root.56))
m22 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.4,
start = list(rho = 1, kappa = 0.9),
algorithm =  "plinear")
m4 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.4,
start = list(rho = 1, kappa = 0.9),
algorithm =  "plinear")
fn <- function(par = list(rho, kappa), x){
with(par, - rho * x ^ {kappa})
}
fn <- function(par, x){
rho <- par[1]
kappa <- par[1]
- rho * x ^ {kappa}
}
optim(c(1,1), fn, method = "Nelder-Mead")
optimize(c(1,1), fn, method = "Nelder-Mead")
optimize(fn, c(1,1),  method = "Nelder-Mead")
m4 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.4,
start = list(rho = 1, kappa = 0.9),
lower = c(0.1, 0.1),
upper = c(1, 1),
algorithm =  "plinear")
m4 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.4,
start = list(rho = 1, kappa = 0.9),
lower = c(0.1, 0.1),
upper = c(1, 1),
algorithm =  "port")
m4
m4 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.4,
start = list(rho = 1, kappa = 0.9),
lower = c(0.01, 0.1),
upper = c(1, 1),
algorithm =  "port")
m4
m4 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.4,
start = list(rho = 1, kappa = 0.9),
lower = c(0.0001, 0.1),
upper = c(1, 1),
algorithm =  "port")
m4
m22 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.4,
start = list(rho = 1, kappa = 0.9),
lower = c(0.0001, 0.1),
upper = c(1, 1),
algorithm =  "port")
m22
m22 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.22,
start = list(rho = 1, kappa = 0.9),
lower = c(0.0001, 0.1),
upper = c(1, 1),
algorithm =  "port")
m22
m56 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.56,
start = list(rho = 1, kappa = 0.9),
algorithm =  "plinear")
m56 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.56,
start = list(rho = 1, kappa = 0.9),
lower = c(0.0001, 0.1),
upper = c(1, 1),
algorithm =  "port")
m56
m56 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.56,
start = list(rho = 1, kappa = 0.9),
lower = c(0.0001, 0.1),
upper = c(1.5, 1.5),
algorithm =  "port")
m56
m56 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.56,
start = list(rho = 1, kappa = 0.9),
lower = c(0.0001, 0.1),
upper = c(2, 1.5),
algorithm =  "port")
m56
m56 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.56,
start = list(rho = 1, kappa = 0.9),
lower = c(0.0001, 0.1),
upper = c(3, 1.5),
algorithm =  "port")
m56
m56 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.56,
start = list(rho = 1, kappa = 0.9),
lower = c(0.0001, 0.1),
upper = c(4, 1.5),
algorithm =  "port")
m56
m56 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.56,
start = list(rho = 1, kappa = 0.9),
lower = c(3, 0.1),
upper = c(10, 1.5),
algorithm =  "port")
m56
m56 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.56,
start = list(rho = 1, kappa = 0.9),
lower = c(2, 0.1),
upper = c(6, 1.5),
algorithm =  "port")
m56 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.56,
start = list(rho = 1, kappa = 0.9),
lower = c(2, 0.1),
upper = c(4, 1.5),
algorithm =  "port")
m56 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.56,
start = list(rho = 1, kappa = 0.9),
lower = c(0.1, 0.1),
upper = c(4, 1.5),
algorithm =  "port")
m56
m56 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.56,
start = list(rho = 1, kappa = 0.9),
lower = c(0.1, 0.1),
upper = c(4.5, 1.5),
algorithm =  "port")
m56
plot(m4)
plot(m22)
plot(m56)
profile(m4)
m56 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.56,
start = list(rho = 1, kappa = 0.9),
lower = c(0.1, 0.1),
upper = c(5, 1.5),
algorithm =  "port")
m56
m56 <- nls(ln.S ~ - rho * Time ^ (kappa),
data = d.56,
start = list(rho = 1, kappa = 0.9),
lower = c(0.1, 0.1),
upper = c(4.5, 1.5),
algorithm =  "port")
m56
coef(m4)
coef <- data.frame(rbind(coef(m4), coef(m22), coef(56)))
coef <- data.frame(rbind(coef(m4), coef(m22), coef(m56)))
coef
par.estim$Temp <-c(4, 22, 56)
par.estim <- data.frame(rbind(coef(m4), coef(m22), coef(m56)))
par.estim$Temp <-c(4, 22, 56)
par.estim
par.estim.l <- reshape2::melt(par.estim, id.vars = Temp)
par.estim.l <- reshape2::melt(par.estim, id.vars = "Temp")
par.estim.l
ggplot(par.estim) + geom_point(aes(x = Temp, y = value)) +
facet_wrap(~variable)
ggplot(par.estim) + geom_point(aes(x = Temp, y = value)) +
facet_wrap("~variable")
ggplot(par.estim.l) + geom_point(aes(x = Temp, y = value)) +
facet_wrap("~variable")
