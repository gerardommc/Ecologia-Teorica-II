start = pars,
lower = c(-12, 0, -1, -0.05),
upper = c(-3, 0.5, 0.1, 0),
algorithm = "port")
summary(mod)
mod <- nls(ln.S ~ -(exp(ap  + Bp * Temp) * Time.h)^exp(ak + Bk * Temp),
data = datos,
start = pars,
lower = c(-12, 0, -1, -0.05),
upper = c(-3, 0.5, 0.1, 0.1),
algorithm = "port")
summary(mod)
coef.mod <- data.frame(par = names(pars),
valor = coef(mod))
write.csv(coef.mod, "Nicho/Coeficientes-pk.csv")
knitr::opts_chunk$set(echo = TRUE)
datos <- read.csv("Nicho/Datos/HeV-survival.csv")
d.4 <- subset(datos, Temp == 4)
d.22 <- subset(datos, Temp == 22)
d.56 <- subset(datos, Temp == 56)
datos
library(ggplot2)
ggplot(d.4) + geom_point(aes(x = Time.h, y = ln.S)) +
geom_smooth(aes(x = Time.h, y = ln.S), method = "lm")
ggplot(d.22) + geom_point(aes(x = Time.h, y = ln.S)) +
geom_smooth(aes(x = Time.h, y = ln.S), method = "loess")
ggplot(d.56) + geom_point(aes(x = Time.h, y = ln.S)) +
geom_smooth(aes(x = Time.h, y = ln.S), method = "loess")
m4 <- nls(ln.S ~ -( rho * Time.h )^ (kappa),
data = d.4,
start = list(rho = 1, kappa = 0.9),
lower = c(0.00001, 0.1),
upper = c(1, 1),
algorithm =  "port")
m22 <- nls(ln.S ~ -( rho * Time.h )^ (kappa),
data = d.22,
start = list(rho = 1, kappa = 0.9),
lower = c(0.0001, 0.1),
upper = c(1, 1),
algorithm =  "port")
m56 <- nls(ln.S ~ -( rho * Time )^ (kappa),
data = d.56,
start = list(rho = 1, kappa = 0.9),
lower = c(0.1, 0.1),
upper = c(105, 1.5),
algorithm =  "port")
par.estim <- data.frame(rbind(coef(m4), coef(m22), coef(m56)))
par.estim$Temp <-c(4, 22, 56)
ggplot(par.estim) + geom_point(aes(x = Temp, y = log(rho))) +
geom_smooth(aes(x = Temp, y = log(rho)), method = "lm")
ggplot(par.estim) + geom_point(aes(x = Temp, y = log(kappa))) +
geom_smooth(aes(x = Temp, y = log(kappa)), method = "lm")
m.rho <- lm(log(rho) ~ Temp, data = par.estim)
m.kappa <- lm(log(kappa) ~ Temp + Temp^2, data = par.estim)
rho.coef <- coef(m.rho)
kappa.coef <- coef(m.kappa)
coef.pk <- data.frame(par = c("ap", "Bp", "ak", "Bk"),
valor = c(rho.coef, kappa.coef))
knitr::kable(coef.pk)
pars <- as.list(coef.pk$valor)
names(pars) <- coef.pk$par
mod <- nls(ln.S ~ -(exp(ap  + Bp * Temp) * Time.h)^exp(ak + Bk * Temp),
data = datos,
start = pars,
lower = c(-12, 0, -1, -0.05),
upper = c(-3, 0.5, 0.1, 0.1),
algorithm = "port")
summary(mod)
d4
d.4
12*60
datos.nuevos <- expand.grid(Tiempo = seq(0, 12, len = 100),
Temp = seq(4, 56, len = 100))
knitr::kable(head(datos.nuevos))
weib <- function(Tiempo = NA, Temp = NA, pars = NA){
ap <- pars$ap
Bp <- pars$Bp
ak <- pars$ak
Bk <- pars$Bk
p <- exp(ap + Bp * Temp)
k <- exp(ak + Bk * Temp)
S <- exp(- (p * Tiempo) ^ k)
return(S)
}
pars.1 <- as.list(coef(mod))
Sup <- weib(Tiempo = datos.nuevos$Tiempo,
Temp = datos.nuevos$Temp,
pars = pars.1)
datos.nuevos$Sup <- Sup
library(lattice)
levelplot(log10(Sup) ~ Tiempo + Temp, data = datos.nuevos,
drape = T)
pars.1
knitr::opts_chunk$set(echo = TRUE)
library(terra)
bio1 <- rast("Nicho/Bio1.tif")
plot(bio1)
coef.pk <- read.csv("Nicho/Coeficientes-pk.csv") #Importando coeficientes
source("Nicho/weibull.R") #Importando la función
bio1.df <- as.data.frame(bio1, xy = T)
pars <- as.list(coef.pk$valor)
names(pars) <- coef.pk$par
Sup.bio1 <- weib(Tiempo = 12,
Temp = bio1.df$Bio1,
pars = pars)
bio1.df$Sup <- Sup.bio1
Sup.r <- rast(bio1.df[, -3])
plot(Sup.r)
weib.ode <- function(t, y, params){
with(params, {
S <- y
Temp <- Tmax - Tdif * cos(pi * t/1440)^2
rho <- exp(ap + Bp * Temp)
kappa <- exp(ak + Bk * Temp)
dS <- - rho * kappa * (-log(S))^(1 - 1/kappa) * S
list(c(dS))
})
}
Tmax <- rast("Nicho/Tmax-01.tif")
Tmin <- rast("Nicho/Tmin-01.tif")
Tdif <- Tmax - Tmin
Tmax.df <- as.data.frame(Tmax, xy = T)
Tdif.df <- as.data.frame(Tdif, xy = F)
Temps.df <- data.frame(Tmax.df, Tdif = Tdif.df$`Tmax-01`)
names(Temps.df) <- c("x", "y", "Tmax", "Tdif")
library(deSolve)
y <- 0.9999
t <- seq(0, 12, length(100))
curve(cos(pi * x)^2, 0, 24)
curve(cos(pi * x/24)^2, 0, 24)
weib.ode <- function(t, y, params){
with(params, {
S <- y
Temp <- Tmax - Tdif * cos(pi * t/24)^2
rho <- exp(ap + Bp * Temp)
kappa <- exp(ak + Bk * Temp)
dS <- - rho * kappa * (-log(S))^(1 - 1/kappa) * S
list(c(dS))
})
}
Tmax <- rast("Nicho/Tmax-01.tif")
Tmin <- rast("Nicho/Tmin-01.tif")
Tdif <- Tmax - Tmin
Tmax.df <- as.data.frame(Tmax, xy = T)
Tdif.df <- as.data.frame(Tdif, xy = F)
Temps.df <- data.frame(Tmax.df, Tdif = Tdif.df$`Tmax-01`)
names(Temps.df) <- c("x", "y", "Tmax", "Tdif")
library(deSolve)
y <- 0.9999
t <- seq(0, 12, length(100))
i = 1
params <- pars
params
params$Tmax <- Temps.df$Tmax[i]
params$Tdif <- Temps.df$Tdif[i]
params
out <- rk4(y = y, times = t,
func = weib.ode,
parms = params)
out
library(deSolve)
y <- 0.9999999
t <- seq(0, 12, length(100))
out <- rk4(y = y, times = t,
func = weib.ode,
parms = params)
out
y <- 0.99
t <- seq(0, 12, length(100))
out <- rk4(y = y, times = t,
func = weib.ode,
parms = params)
out
S <- y
Temp <- params$Tmax - params$Tdif * cos(pi * t[1]/24)^2
Temp
rho <- exp(params$ap + params$Bp * Temp)
rho
kappa <- exp(params$ak + params$Bk * Temp)
kappa
dS <- - rho * kappa * (-log(S))^(1 - 1/kappa) * (1 - S)
dS
dS <- - rho * kappa * (-log(S))^(1 - 1/kappa) * (S)
dS
out <- lsoda(y = y, times = t,
func = weib.ode,
parms = params)
out
library(deSolve)
y <- 0.9999
t <- seq(0, 12, length(100))
params <- pars
params$Tmax <- Temps.df$Tmax[i]
params$Tdif <- Temps.df$Tdif[i]
out <- lsoda(y = y, times = t,
func = weib.ode,
parms = params)
out
nrow(Temps.df)
out <- lsoda(y = y, times = t,
func = weib.ode,
parms = params) |> as.data.frame()
out
out$1
out
out <- lsoda(y = y, times = t,
func = weib.ode,
parms = params)# |> as.data.frame()
out
out
out <- lsoda(y = y, times = t,
func = weib.ode,
parms = params)# |> as.data.frame()
class(out)
out[, 2]
nrow(out)
library(tidyr)
library(doParallel)
registerDoParallel(cores = 8)
sims <- foreach(i = 1:nrow(Temps.df), .combine = c) %dopar% {
params <- pars
params$Tmax <- Temps.df$Tmax[i]
params$Tdif <- Temps.df$Tdif[i]
out <- lsoda(y = y, times = t,
func = weib.ode,
parms = params)
return(out[nrow(out), 1])
}
sims
class
class(sims)
Sup.fluc <- data.frame(bio.df[, c("x", "y")], Sup = sims)
library(terra)
bio1 <- rast("Nicho/Bio1.tif")
plot(bio1)
coef.pk <- read.csv("Nicho/Coeficientes-pk.csv") #Importando coeficientes
source("Nicho/weibull.R") #Importando la función
bio1.df <- as.data.frame(bio1, xy = T)
pars <- as.list(coef.pk$valor)
names(pars) <- coef.pk$par
Sup.bio1 <- weib(Tiempo = 12,
Temp = bio1.df$Bio1,
pars = pars)
bio1.df$Sup <- Sup.bio1
Sup.r <- rast(bio1.df[, -3])
plot(Sup.r)
library(deSolve)
y <- 0.9999
t <- seq(0, 12, length(100))
Sup.fluc <- data.frame(bio1.df[, c("x", "y")], Sup = sims)
Sup.fluc <- data.frame(Temps.df[, c("x", "y")], Sup = sims)
Sup.fluc.r <- rast(Sup.fluc)
plot(Sup.fluc.r)
out[, 2]
library(tidyr)
library(doParallel)
registerDoParallel(cores = 8)
sims <- foreach(i = 1:nrow(Temps.df), .combine = c) %dopar% {
params <- pars
params$Tmax <- Temps.df$Tmax[i]
params$Tdif <- Temps.df$Tdif[i]
out <- lsoda(y = y, times = t,
func = weib.ode,
parms = params)
return(out[nrow(out), 2])
}
Sup.fluc <- data.frame(Temps.df[, c("x", "y")], Sup = sims)
Sup.fluc.r <- rast(Sup.fluc)
plot(Sup.fluc.r)
knitr::opts_chunk$set(echo = TRUE)
datos <- read.csv("Nicho/Datos/HeV-survival.csv")
d.4 <- subset(datos, Temp == 4)
d.22 <- subset(datos, Temp == 22)
d.56 <- subset(datos, Temp == 56)
library(ggplot2)
ggplot(d.4) + geom_point(aes(x = Time.h, y = ln.S)) +
geom_smooth(aes(x = Time.h, y = ln.S), method = "lm")
ggplot(d.22) + geom_point(aes(x = Time.h, y = ln.S)) +
geom_smooth(aes(x = Time.h, y = ln.S), method = "loess")
ggplot(d.56) + geom_point(aes(x = Time.h, y = ln.S)) +
geom_smooth(aes(x = Time.h, y = ln.S), method = "loess")
m4 <- nls(ln.S ~ -( rho * Time.h )^ (kappa),
data = d.4,
start = list(rho = 1, kappa = 0.9),
lower = c(0.00001, 0.1),
upper = c(1, 1),
algorithm =  "port")
m22 <- nls(ln.S ~ -( rho * Time.h )^ (kappa),
data = d.22,
start = list(rho = 1, kappa = 0.9),
lower = c(0.0001, 0.1),
upper = c(1, 1),
algorithm =  "port")
m56 <- nls(ln.S ~ -( rho * Time )^ (kappa),
data = d.56,
start = list(rho = 1, kappa = 0.9),
lower = c(0.1, 0.1),
upper = c(105, 1.5),
algorithm =  "port")
par.estim <- data.frame(rbind(coef(m4), coef(m22), coef(m56)))
par.estim$Temp <-c(4, 22, 56)
ggplot(par.estim) + geom_point(aes(x = Temp, y = log(rho))) +
geom_smooth(aes(x = Temp, y = log(rho)), method = "lm")
ggplot(par.estim) + geom_point(aes(x = Temp, y = log(kappa))) +
geom_smooth(aes(x = Temp, y = log(kappa)), method = "lm")
m.rho <- lm(log(rho) ~ Temp, data = par.estim)
m.kappa <- lm(log(kappa) ~ Temp + Temp^2, data = par.estim)
rho.coef <- coef(m.rho)
kappa.coef <- coef(m.kappa)
coef.pk <- data.frame(par = c("ap", "Bp", "ak", "Bk"),
valor = c(rho.coef, kappa.coef))
knitr::kable(coef.pk)
pars <- as.list(coef.pk$valor)
names(pars) <- coef.pk$par
mod <- nls(ln.S ~ -(exp(ap  + Bp * Temp) * Time.h)^exp(ak + Bk * Temp),
data = datos,
start = pars,
lower = c(-12, 0, -1, -0.05),
upper = c(-3, 0.5, 0.1, 0.1),
algorithm = "port")
summary(mod)
coef.mod <- data.frame(par = names(pars),
valor = coef(mod))
write.csv(coef.mod, "Nicho/Coeficientes-pk.csv")
datos.nuevos <- expand.grid(Tiempo = seq(0, 12, len = 100),
Temp = seq(4, 56, len = 100))
knitr::kable(head(datos.nuevos))
weib <- function(Tiempo = NA, Temp = NA, pars = NA){
ap <- pars$ap
Bp <- pars$Bp
ak <- pars$ak
Bk <- pars$Bk
p <- exp(ap + Bp * Temp)
k <- exp(ak + Bk * Temp)
S <- exp(- (p * Tiempo) ^ k)
return(S)
}
pars.1 <- as.list(coef(mod))
Sup <- weib(Tiempo = datos.nuevos$Tiempo,
Temp = datos.nuevos$Temp,
pars = pars.1)
datos.nuevos$Sup <- Sup
library(lattice)
levelplot(log10(Sup) ~ Tiempo + Temp, data = datos.nuevos,
drape = T)
library(lattice)
wireframe(log10(Sup) ~ Tiempo + Temp, data = datos.nuevos,
drape = T)
library(lattice)
wireframe(Sup ~ Tiempo + Temp, data = datos.nuevos,
drape = T)
datos.nuevos <- expand.grid(Tiempo = seq(0, 12, len = 50),
Temp = seq(4, 56, len = 50))
knitr::kable(head(datos.nuevos))
weib <- function(Tiempo = NA, Temp = NA, pars = NA){
ap <- pars$ap
Bp <- pars$Bp
ak <- pars$ak
Bk <- pars$Bk
p <- exp(ap + Bp * Temp)
k <- exp(ak + Bk * Temp)
S <- exp(- (p * Tiempo) ^ k)
return(S)
}
pars.1 <- as.list(coef(mod))
Sup <- weib(Tiempo = datos.nuevos$Tiempo,
Temp = datos.nuevos$Temp,
pars = pars.1)
datos.nuevos$Sup <- Sup
library(lattice)
wireframe(Sup ~ Tiempo + Temp, data = datos.nuevos,
drape = T)
library(lattice)
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(x = 40, y = 10, z = 10))
library(lattice)
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(x = 40, y = 10, z = 0))
library(lattice)
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(x = 40, y = 10, z = 45))
library(lattice)
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(x = 40, y = 10, z = -45))
library(lattice)
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(x = 40, y = 10, z = 5))
library(lattice)
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T)
library(lattice)
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(x = 0, y = 0, z = 0))
library(lattice)
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(x = 0, y = 0, z = 10))
library(lattice)
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(x = 0, y = 0, z = 90))
library(lattice)
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(x = 0, y = 0, z = -90))
library(lattice)
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(x = 0, y = 0, z = 10))
library(lattice)
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(x = 0, y = 0, z = -10))
library(lattice)
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(x = 0, y = 10, z = -10))
library(lattice)
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(x = 0, y = 90, z = -10))
library(lattice)
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T)
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
list(z = 20, x = -70, y = 3))
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(z = 20, x = -70, y = 3))
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(z = 20, x = 70, y = 3))
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(z = 20, x = -30, y = 3))
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(z = 20, x = -70, y = 3))
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(z = 20, x = -70, y = 10))
library(lattice)
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(z = 20, x = -70, y = 10))
library(lattice)
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(z = 20, x = -70, y = 45))
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(z = 20, x = -70, y = 7))
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(z = 20, x = -70, y = -10))
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(z = 20, x = -70, y = 3))
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(z = -20, x = -70, y = 3))
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(z = -40, x = -70, y = 3))
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(z = -90, x = -70, y = 3))
wireframe(Sup ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(z = -135, x = -70, y = 3))
library(lattice)
wireframe(log10(Sup) ~ Tiempo + Temp,
data = datos.nuevos,
drape = T,
screen = list(z = -135, x = -70, y = 3))
